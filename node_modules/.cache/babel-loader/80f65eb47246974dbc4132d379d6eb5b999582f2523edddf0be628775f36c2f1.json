{"ast":null,"code":"import api from '../../api';\nexport const fetchProducts = (params = {}) => async dispatch => {\n  dispatch({\n    type: 'FETCH_PRODUCTS_REQUEST'\n  });\n  try {\n    const response = await api.get('/products', {\n      params\n    });\n    dispatch({\n      type: 'FETCH_PRODUCTS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'FETCH_PRODUCTS_FAILURE',\n      payload: error.message\n    });\n  }\n};\nexport const addProduct = productData => async dispatch => {\n  dispatch({\n    type: 'ADD_PRODUCT_REQUEST'\n  });\n  try {\n    const response = await api.post('/products', productData);\n    dispatch({\n      type: 'ADD_PRODUCT_SUCCESS',\n      payload: response.data\n    });\n    dispatch(fetchProducts());\n  } catch (error) {\n    dispatch({\n      type: 'ADD_PRODUCT_FAILURE',\n      payload: error.message\n    });\n  }\n};\nexport const updateProduct = (id, productData) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_PRODUCT_REQUEST'\n  });\n  try {\n    const response = await api.put(`/products/${id}`, productData);\n    dispatch({\n      type: 'UPDATE_PRODUCT_SUCCESS',\n      payload: response.data\n    });\n    dispatch(fetchProducts());\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_PRODUCT_FAILURE',\n      payload: error.message\n    });\n  }\n};\nexport const deleteProduct = id => async dispatch => {\n  dispatch({\n    type: 'DELETE_PRODUCT_REQUEST'\n  });\n  try {\n    await api.delete(`/products/${id}`);\n    dispatch({\n      type: 'DELETE_PRODUCT_SUCCESS',\n      payload: id\n    });\n    dispatch(fetchProducts());\n  } catch (error) {\n    dispatch({\n      type: 'DELETE_PRODUCT_FAILURE',\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["api","fetchProducts","params","dispatch","type","response","get","payload","data","error","message","addProduct","productData","post","updateProduct","id","put","deleteProduct","delete"],"sources":["C:/Users/PC/Documents/ecommerce-frontend/src/redux/actions/productActions.js"],"sourcesContent":["import api from '../../api';\r\n\r\nexport const fetchProducts = (params = {}) => async (dispatch) => {\r\n  dispatch({ type: 'FETCH_PRODUCTS_REQUEST' });\r\n  try {\r\n    const response = await api.get('/products', { params });\r\n    dispatch({ type: 'FETCH_PRODUCTS_SUCCESS', payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: 'FETCH_PRODUCTS_FAILURE', payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addProduct = (productData) => async (dispatch) => {\r\n  dispatch({ type: 'ADD_PRODUCT_REQUEST' });\r\n  try {\r\n    const response = await api.post('/products', productData);\r\n    dispatch({ type: 'ADD_PRODUCT_SUCCESS', payload: response.data });\r\n    dispatch(fetchProducts());\r\n  } catch (error) {\r\n    dispatch({ type: 'ADD_PRODUCT_FAILURE', payload: error.message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n  dispatch({ type: 'UPDATE_PRODUCT_REQUEST' });\r\n  try {\r\n    const response = await api.put(`/products/${id}`, productData);\r\n    dispatch({ type: 'UPDATE_PRODUCT_SUCCESS', payload: response.data });\r\n    dispatch(fetchProducts());\r\n  } catch (error) {\r\n    dispatch({ type: 'UPDATE_PRODUCT_FAILURE', payload: error.message });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  dispatch({ type: 'DELETE_PRODUCT_REQUEST' });\r\n  try {\r\n    await api.delete(`/products/${id}`);\r\n    dispatch({ type: 'DELETE_PRODUCT_SUCCESS', payload: id });\r\n    dispatch(fetchProducts());\r\n  } catch (error) {\r\n    dispatch({ type: 'DELETE_PRODUCT_FAILURE', payload: error.message });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,WAAW;AAE3B,OAAO,MAAMC,aAAa,GAAGA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK,MAAOC,QAAQ,IAAK;EAChEA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAyB,CAAC,CAAC;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,WAAW,EAAE;MAAEJ;IAAO,CAAC,CAAC;IACvDC,QAAQ,CAAC;MAAEC,IAAI,EAAE,wBAAwB;MAAEG,OAAO,EAAEF,QAAQ,CAACG;IAAK,CAAC,CAAC;EACtE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAE,wBAAwB;MAAEG,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACtE;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,WAAW,IAAK,MAAOT,QAAQ,IAAK;EAC7DA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAsB,CAAC,CAAC;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACa,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;IACzDT,QAAQ,CAAC;MAAEC,IAAI,EAAE,qBAAqB;MAAEG,OAAO,EAAEF,QAAQ,CAACG;IAAK,CAAC,CAAC;IACjEL,QAAQ,CAACF,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAE,qBAAqB;MAAEG,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACnE;AACF,CAAC;AAED,OAAO,MAAMI,aAAa,GAAGA,CAACC,EAAE,EAAEH,WAAW,KAAK,MAAOT,QAAQ,IAAK;EACpEA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAyB,CAAC,CAAC;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACgB,GAAG,CAAC,aAAaD,EAAE,EAAE,EAAEH,WAAW,CAAC;IAC9DT,QAAQ,CAAC;MAAEC,IAAI,EAAE,wBAAwB;MAAEG,OAAO,EAAEF,QAAQ,CAACG;IAAK,CAAC,CAAC;IACpEL,QAAQ,CAACF,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAE,wBAAwB;MAAEG,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACtE;AACF,CAAC;AAED,OAAO,MAAMO,aAAa,GAAIF,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EACvDA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAyB,CAAC,CAAC;EAC5C,IAAI;IACF,MAAMJ,GAAG,CAACkB,MAAM,CAAC,aAAaH,EAAE,EAAE,CAAC;IACnCZ,QAAQ,CAAC;MAAEC,IAAI,EAAE,wBAAwB;MAAEG,OAAO,EAAEQ;IAAG,CAAC,CAAC;IACzDZ,QAAQ,CAACF,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAE,wBAAwB;MAAEG,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACtE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import api from'../../utils/api';import setAuthToken from'../../utils/setAuthToken';// Register User\nexport const register=formData=>async dispatch=>{dispatch({type:'REGISTER_REQUEST'});try{const res=await api.post('/auth/register',formData);// Ensure this matches your backend route\ndispatch({type:'REGISTER_SUCCESS',payload:res.data});setAuthToken(res.data.token);}catch(err){var _err$response,_err$response$data;console.error('Registration error:',err);const errorMsg=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.msg)||err.message||'An error occurred during registration';console.error('Error message:',errorMsg);dispatch({type:'REGISTER_FAIL',payload:errorMsg});}};// Login User\nexport const login=(email,password)=>async dispatch=>{dispatch({type:'LOGIN_REQUEST'});const body={email,password};try{const res=await api.post('/auth/login',body);// Ensure this matches your backend route\ndispatch({type:'LOGIN_SUCCESS',payload:res.data});setAuthToken(res.data.token);}catch(err){var _err$response2,_err$response2$data;console.error('Login error:',err);const errorMsg=((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.msg)||'An error occurred during login';console.error('Error message:',errorMsg);dispatch({type:'LOGIN_FAIL',payload:errorMsg});}};// Logout\nexport const logout=()=>dispatch=>{dispatch({type:'LOGOUT'});setAuthToken(null);// Remove token from local storage or headers\n};// Load User\nexport const loadUser=()=>async dispatch=>{if(localStorage.token){setAuthToken(localStorage.token);// Set token in headers if it exists\n}try{const res=await api.get('/auth');// Ensure this matches your backend route\ndispatch({type:'USER_LOADED',payload:res.data});}catch(err){console.error('Load user error:',err);dispatch({type:'AUTH_ERROR'});}};","map":{"version":3,"names":["api","setAuthToken","register","formData","dispatch","type","res","post","payload","data","token","err","_err$response","_err$response$data","console","error","errorMsg","response","msg","message","login","email","password","body","_err$response2","_err$response2$data","logout","loadUser","localStorage","get"],"sources":["C:/Users/PC/Documents/ecommerce-frontend/src/redux/actions/authActions.js"],"sourcesContent":["import api from '../../utils/api';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\n\r\n// Register User\r\nexport const register = (formData) => async (dispatch) => {\r\n  dispatch({ type: 'REGISTER_REQUEST' });\r\n  try {\r\n    const res = await api.post('/auth/register', formData); // Ensure this matches your backend route\r\n\r\n    dispatch({\r\n      type: 'REGISTER_SUCCESS',\r\n      payload: res.data\r\n    });\r\n\r\n    setAuthToken(res.data.token);\r\n  } catch (err) {\r\n    console.error('Registration error:', err);\r\n    const errorMsg = err.response?.data?.msg || err.message || 'An error occurred during registration';\r\n    console.error('Error message:', errorMsg);\r\n    dispatch({\r\n      type: 'REGISTER_FAIL',\r\n      payload: errorMsg\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  dispatch({ type: 'LOGIN_REQUEST' });\r\n  const body = { email, password };\r\n\r\n  try {\r\n    const res = await api.post('/auth/login', body); // Ensure this matches your backend route\r\n\r\n    dispatch({\r\n      type: 'LOGIN_SUCCESS',\r\n      payload: res.data\r\n    });\r\n\r\n    setAuthToken(res.data.token);\r\n  } catch (err) {\r\n    console.error('Login error:', err);\r\n    const errorMsg = err.response?.data?.msg || 'An error occurred during login';\r\n    console.error('Error message:', errorMsg);\r\n    dispatch({\r\n      type: 'LOGIN_FAIL',\r\n      payload: errorMsg\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: 'LOGOUT' });\r\n  setAuthToken(null); // Remove token from local storage or headers\r\n};\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token); // Set token in headers if it exists\r\n  }\r\n\r\n  try {\r\n    const res = await api.get('/auth'); // Ensure this matches your backend route\r\n\r\n    dispatch({\r\n      type: 'USER_LOADED',\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.error('Load user error:', err);\r\n    dispatch({\r\n      type: 'AUTH_ERROR'\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
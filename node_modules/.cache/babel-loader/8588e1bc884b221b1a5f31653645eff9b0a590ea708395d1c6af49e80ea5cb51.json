{"ast":null,"code":"import api from '../../utils/api';\nimport setAuthToken from '../../utils/setAuthToken';\n\n// Register User\nexport const register = formData => async dispatch => {\n  dispatch({\n    type: 'REGISTER_REQUEST'\n  });\n  try {\n    const res = await api.post('/auth/register', formData); // Ensure this matches your backend route\n\n    dispatch({\n      type: 'REGISTER_SUCCESS',\n      payload: res.data\n    });\n    setAuthToken(res.data.token);\n  } catch (err) {\n    var _err$response, _err$response$data;\n    console.error('Registration error:', err);\n    const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || err.message || 'An error occurred during registration';\n    console.error('Error message:', errorMsg);\n    dispatch({\n      type: 'REGISTER_FAIL',\n      payload: errorMsg\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  dispatch({\n    type: 'LOGIN_REQUEST'\n  });\n  const body = {\n    email,\n    password\n  };\n  try {\n    const res = await api.post('/auth/login', body); // Ensure this matches your backend route\n\n    dispatch({\n      type: 'LOGIN_SUCCESS',\n      payload: res.data\n    });\n    setAuthToken(res.data.token);\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    console.error('Login error:', err);\n    const errorMsg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.msg) || 'An error occurred during login';\n    console.error('Error message:', errorMsg);\n    dispatch({\n      type: 'LOGIN_FAIL',\n      payload: errorMsg\n    });\n  }\n};\n\n// Logout\nexport const logout = () => dispatch => {\n  dispatch({\n    type: 'LOGOUT'\n  });\n  setAuthToken(null); // Remove token from local storage or headers\n};\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token); // Set token in headers if it exists\n  }\n  try {\n    const res = await api.get('/auth'); // Ensure this matches your backend route\n\n    dispatch({\n      type: 'USER_LOADED',\n      payload: res.data\n    });\n  } catch (err) {\n    console.error('Load user error:', err);\n    dispatch({\n      type: 'AUTH_ERROR'\n    });\n  }\n};","map":{"version":3,"names":["api","setAuthToken","register","formData","dispatch","type","res","post","payload","data","token","err","_err$response","_err$response$data","console","error","errorMsg","response","msg","message","login","email","password","body","_err$response2","_err$response2$data","logout","loadUser","localStorage","get"],"sources":["C:/Users/PC/Documents/ecommerce-frontend/src/redux/actions/authActions.js"],"sourcesContent":["import api from '../../utils/api';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\n\r\n// Register User\r\nexport const register = (formData) => async (dispatch) => {\r\n  dispatch({ type: 'REGISTER_REQUEST' });\r\n  try {\r\n    const res = await api.post('/auth/register', formData); // Ensure this matches your backend route\r\n\r\n    dispatch({\r\n      type: 'REGISTER_SUCCESS',\r\n      payload: res.data\r\n    });\r\n\r\n    setAuthToken(res.data.token);\r\n  } catch (err) {\r\n    console.error('Registration error:', err);\r\n    const errorMsg = err.response?.data?.msg || err.message || 'An error occurred during registration';\r\n    console.error('Error message:', errorMsg);\r\n    dispatch({\r\n      type: 'REGISTER_FAIL',\r\n      payload: errorMsg\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  dispatch({ type: 'LOGIN_REQUEST' });\r\n  const body = { email, password };\r\n\r\n  try {\r\n    const res = await api.post('/auth/login', body); // Ensure this matches your backend route\r\n\r\n    dispatch({\r\n      type: 'LOGIN_SUCCESS',\r\n      payload: res.data\r\n    });\r\n\r\n    setAuthToken(res.data.token);\r\n  } catch (err) {\r\n    console.error('Login error:', err);\r\n    const errorMsg = err.response?.data?.msg || 'An error occurred during login';\r\n    console.error('Error message:', errorMsg);\r\n    dispatch({\r\n      type: 'LOGIN_FAIL',\r\n      payload: errorMsg\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: 'LOGOUT' });\r\n  setAuthToken(null); // Remove token from local storage or headers\r\n};\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token); // Set token in headers if it exists\r\n  }\r\n\r\n  try {\r\n    const res = await api.get('/auth'); // Ensure this matches your backend route\r\n\r\n    dispatch({\r\n      type: 'USER_LOADED',\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    console.error('Load user error:', err);\r\n    dispatch({\r\n      type: 'AUTH_ERROR'\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}